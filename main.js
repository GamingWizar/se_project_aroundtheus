!function(){"use strict";class e{constructor(e,t,s){this._text=e.text,this._image=e.image,this._cardSelector=t,this._handleImageClick=s}_getCardTemplate(){return document.querySelector(`#${this._cardSelector}`).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._elementImage=this._element.querySelector(".card__image"),this._elementImage.addEventListener("click",(()=>{this._handleImageClick(this._text,this._image)})),this._likeButtonHandler(),this._deleteButtonHandler()}_likeButtonHandler(){this._cardHeart=this._element.querySelector(".card__heart"),this._cardHeart.addEventListener("click",(()=>{this._cardHeart.classList.toggle("card__heart_liked")}))}_deleteButtonHandler(){this._cardDelete=this._element.querySelector(".card__delete"),this._cardDelete.addEventListener("click",(()=>{this._element.remove()}))}generateCard(){return this._element=this._getCardTemplate(),this._setEventListeners(),this._element.querySelector(".card__text").textContent=this._text,this._elementImage.src=this._image,this._elementImage.alt=this._text,this._element}}class t{constructor(e,t){this._settings=e,this._form=t}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_showInputError(e){this._errorElement=this._form.querySelector(`#${e.id}-error`),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._settings.errorClass),e.classList.add(this._settings.inputErrorClass)}_hideInputError(e){this._errorElement=this._form.querySelector(`#${e.id}-error`),this._errorElement.textContent="",this._errorElement.classList.remove(this._settings.errorClass),e.classList.remove(this._settings.inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._form.querySelector(this._settings.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}class s{constructor(e){this._popup=e}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"==e.key&&this.close()};setEventListeners(){this._popup.addEventListener("click",(e=>{e.target==this._popup.querySelector(".modal__close-button-image")&&this.close()})),this._popup.addEventListener("mousedown",(e=>{e.target===this._popup&&this.close()}))}}class i extends s{constructor(e,t){super(e),this._submitFunction=t,this._form=this._popup.querySelector(".modal__form")}_getInputValues(){this._inputValues={},this._form.querySelectorAll(".modal__input").forEach((e=>{this._inputValues[e.name]=e.value}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._getInputValues(),e.target.reset(),this._submitFunction(this._inputValues)}))}}const r=[{text:"Lago di Braies",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{text:"Vanoise National Park",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{text:"Latemar",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{text:"Bald Mountains",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{text:"Lake Louise",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{text:"Yosemite Valley",image:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}],n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=new class extends s{constructor(e){super(e)}open(e,t){this._cardImage=this._popup.querySelector(".modal__card-image"),this._cardImage.src=t,this._cardImage.alt=e,this._popup.querySelector(".modal__card-image-description").textContent=e,super.open()}}(document.querySelector(".modal_modal-type_card-image"));o.setEventListeners();const a=document.querySelector(".cards");function c(e,t){o.open(e,t)}function l(t){return new e(t,"cardTemplate",c).generateCard()}const _=new class{constructor(e,t){let{items:s,renderer:i}=e;this._initialItems=s,this._renderer=i,this._itemContainer=t}renderItems(){this._initialItems.forEach((e=>{this.addItem(e)}))}addItem(e){this._renderer(e,this._itemContainer)}}({items:function(){const e=[];return r.forEach((t=>{const s=l(t);e.push(s)})),e}(),renderer:function(e,t){t.prepend(e)}},a);_.renderItems();const d=document.querySelector(".profile"),u=d.querySelector(".profile__name"),m=d.querySelector(".profile__description"),h=new class{constructor(e){let{name:t,description:s}=e;this._name=t,this._description=s}getUserInfo(){const e={};return e.name=this._name.textContent,e.description=this._description.textContent,e}setUserInfo(e){let{name:t,description:s}=e;this._name.textContent=t,this._description.textContent=s}}({name:u,description:m}),p=new i(document.querySelector(".modal_modal-type_profile-edit"),(function(e){h.setUserInfo(e),p.close()}));p.setEventListeners();const g=new t(n,document.forms["profile-edit__form"]);g.enableValidation();const f=p._popup.querySelector(".modal__input_name"),E=p._popup.querySelector(".modal__input_description");d.querySelector(".profile__edit").addEventListener("click",(function(e){p.open();const t=h.getUserInfo();f.value=t.name,E.value=t.description,g.resetValidation()}));const v=new t(n,document.querySelector("#add-card__form"));v.enableValidation();const y=new i(document.querySelector(".modal_modal-type_card-adder"),(function(e){const t=l({text:e.title,image:e.link});_.addItem(t),y.close(),v.resetValidation()}));y.setEventListeners(),d.querySelector(".profile__add").addEventListener("click",(e=>{y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,